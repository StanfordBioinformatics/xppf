[DEFAULT]
# Common base defaults, can be overridden by other sections
BIND_PORT: 8000
SERVER_WSGI_MODULE: loomengine.master.wsgi

TEMP_DIR: /tmp
WEBSERVER_PIDFILE: %(TEMP_DIR)s/loom_webserver.pid

LOGS_DIR: ~/.loom/log
ACCESS_LOGFILE: %(LOGS_DIR)s/loom_http_access.log
ERROR_LOGFILE: %(LOGS_DIR)s/loom_http_error.log
DJANGO_LOGFILE: %(LOGS_DIR)s/loom_django.log
MASTER_LOGFILE: %(LOGS_DIR)s/loom_master.log
LOG_LEVEL: INFO

[local]
# Master, worker, client, and storage all on localhost
PROTOCOL: http
BIND_IP: 127.0.0.1
EXTERNAL_PORT: 8000
FILE_SERVER_TYPE: LOCAL
WORKER_TYPE: LOCAL
FILE_ROOT: ~/loomdata
FILE_ROOT_FOR_WORKER: ~/loomdata
MASTER_URL_FOR_WORKER: %(PROTOCOL)s://localhost:%(EXTERNAL_PORT)s
MASTER_URL_FOR_SERVER: %(PROTOCOL)s://localhost:%(EXTERNAL_PORT)s
ALLOWED_HOSTS: [localhost, 127.0.0.1]

[gcloud]
# Client is localhost; master and workers are new GCE instances, storage is Google Storage
PROTOCOL: https
BIND_IP: 0.0.0.0
EXTERNAL_PORT: 443
FILE_SERVER_TYPE: GOOGLE_CLOUD
WORKER_TYPE: GOOGLE_CLOUD
FILE_ROOT: ~/loomdata
FILE_ROOT_FOR_WORKER: %(WORKER_SCRATCH_DISK_MOUNT_POINT)s
MASTER_URL_FOR_WORKER: %(PROTOCOL)s://%(SERVER_NAME)s:%(EXTERNAL_PORT)s
MASTER_URL_FOR_SERVER: http://localhost:8000
WORKER_USES_SERVER_INTERNAL_IP: True            ; if True, update MASTER_URL_FOR_WORKER with server's internal IP at runtime 
CLIENT_USES_SERVER_INTERNAL_IP: False           ; if True, client uses server's internal IP

GCE_SSH_KEY_FILE: ~/.ssh/google_compute_engine  ; created by 'gcloud compute config-ssh'
GCE_BUCKET: None                                ; if None, will attempt to create a bucket named <project>-loom
WORKER_VM_IMAGE: centos-7                       ; image to use when task manager boots up a worker VM
WORKER_LOCATION: us-central1-a                  ; location to use when task manager boots up a worker VM
WORKER_BOOT_DISK_TYPE: pd-ssd                   ; worker boot disk type, pd-ssd or pd-standard
WORKER_BOOT_DISK_SIZE: 163                      ; worker boot disk size in GB
WORKER_SCRATCH_DISK_TYPE: pd-ssd                ; worker scratch disk type, pd-ssd or pd-standard
WORKER_SCRATCH_DISK_SIZE: 163                   ; worker scratch disk size in GB
WORKER_SCRATCH_DISK_MOUNT_POINT: /mnt/loomdata  ; where to mount the worker scratch disk
WORKER_NETWORK: default                         ; network that worker VM should be part of
WORKER_CUSTOM_SUBNET:                           ; blank for no custom subnetwork 
WORKER_TAGS: loom-worker                        ; comma-separated tags (no spaces) to assign to worker VMs
WORKER_SKIP_INSTALLS: False                     ; if True, assumes WORKER_VM_IMAGE already has Docker, pip, and docker-py installed

SERVER_NAME: loom-master
SERVER_ZONE: us-central1-a
SERVER_DISK_TYPE: pd-ssd
SERVER_DISK_SIZE: 163
SERVER_VM_IMAGE: centos-7
SERVER_INSTANCE_TYPE: n1-standard-1
SERVER_NETWORK: default
SERVER_CUSTOM_SUBNET: 
SERVER_TAGS: http-server,https-server,loom-master
SERVER_SKIP_INSTALLS: False                      ; if True, assumes SERVER_VM_IMAGE already has Docker, pip, and docker-py installed

RUN_AFTER_SERVER_CREATE_PLAYBOOK_PATH: empty.yml ; path to a playbook to run after creating a server  

DOCKER_REGISTRY: None                            ; None for DockerHub, or hostname:port for custom registry
DOCKER_REPO: loomengine
DOCKER_IMAGE: loom
DOCKER_TAG: latest

SERVICE_ACCOUNT_ROLES: ["roles/editor"]     ; Create service account with these roles. Ignored if custom service account specified. Must be a valid JSON array.

CUSTOM_SERVICE_ACCOUNT_EMAIL: None          ; When not None, use this pre-existing service account instead of creating one. Scopes and roles will not be modified, and users must manage their own API keys.

ALLOWED_HOSTS: ['*']
